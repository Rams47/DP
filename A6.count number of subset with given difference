// arr[] = {1,1,2,3}  diff=1;
//There are three subset
//{1,2},{1,3}
//{1,2},{1,3}
//{1,1,2},{3}

//Approach 
// Let sum of subset 1 be s1 and subset 2 with s2
// s1 - s2 = diff (given)
// s1 + s2=sum of array (logical)
// Therefore adding both eq we get :
// 2s1= diff + sum of array
// s1= (diff + sum of array)/2;

//CODE:

int subsetSum(int a[], int n, int sum)
{
         
    int t[][] = new int[n+1][sum+1];
        
    t[0][0] = 1;
    for (int i = 1; i <= sum; i++)
        t[0][i] = 0;
    for (int i = 1; i <= n; i++)
        t[i][0] = 1;
 
    for (int i = 1; i <= n; i++)
    {
        for (int j = 1; j <= sum; j++)
        {
            
            if (a[i - 1] <= j)
                t[i][j] = t[i - 1][j] + t[i - 1][j - a[i - 1]]; 
            else
                  t[i][j] = t[i - 1][j];
        }
    }

    return t[n][sum];
}

int countWithGivenSum(int arr[ ], int n, int diff)
{   
     int sum=0;
    for(int i=0;i<n;i++)
         sum+=nums[i]
	 
	 int reqSum=(diff+sum)/2;
	 return subsetSum(arr,n,reqSum);
}
